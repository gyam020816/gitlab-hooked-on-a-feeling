properties([[$class: 'GitLabConnectionProperty', gitLabConnection: 'gitlab']])
pipeline {
    agent {
        label 'docker'
    }
    parameters {
        text(description: 'GitLab url ending with /', name: 'gitlab_url')
        text(description: 'GitLab personal access token', name: 'gitlab_token')
        text(description: 'Jenkins url ending with /', name: 'jenkins_url')
    }
    options {
        skipDefaultCheckout true
    }
    stages {
        stage('Clean workspace') {
            steps {
                deleteDir()
            }
        }
        stage('Build') {
            agent {
                docker {
                    image 'maven:3.5.4-jdk-8-alpine'
                    args '-v $HOME/dotm2:/tmp/maven_local_repo'
                    reuseNode true
                }
            }
            steps {
                checkout scm
                sh 'ls'
                sh '''
                    mvn -Dmaven.repo.local=/tmp/maven_local_repo clean package assembly:assembly
                '''
                sh "java -jar target/gitlabhookedonafeeling.jar --gitlab_url=${params.gitlab_url} --gitlab_token=${params.gitlab_token} --jenkins_url=${params.jenkins_url}"
            }
        }
    }
    post {
        always {
            step([$class: 'Mailer', notifyEveryUnstableBuild: true, recipients: 'automation@ha3.eu'])
        }
        success {
            updateGitlabCommitStatus name: 'jenkins', state: 'success'
        }
        failure {
            updateGitlabCommitStatus name: 'jenkins', state: 'failed'
        }
        unstable {
            updateGitlabCommitStatus name: 'jenkins', state: 'failed'
        }
    }
}